#!/usr/bin/env python3

import datetime
import subprocess
import shlex
import os
import sys

rotateOrder = ['columbia', 'cornell', 'rpi', 'suny', 'cuny', 'nyu']
highPriorityValue = 100
normalPriorityValue = 10
lowPriorityValue = 9

def GetWeekNum():
    today = datetime.datetime.today()
    return today.isocalendar()[1]-1 # Reindex from 0 instead of 1 because Python is dumb and inconsistent about numeric indexes

def GetThisWeeksInstitution():
    return rotateOrder[GetWeekNum() % len(rotateOrder)]

def SetPartitionPriorityTier(partition_name, value, dry_run=False):
    try:
        environ = os.environ.copy()
        environ["SLURM_CONF"] = "/cm/shared/apps/slurm/var/etc/slurm/slurm.conf"
        cmd = f"/cm/shared/apps/slurm/current/bin/scontrol update PartitionName={partition_name} PriorityTier={value}"

        if dry_run == True:
            print(cmd)
            return True
        else:
            result = subprocess.run(shlex.split(cmd), capture_output=True, text=True, env=environ)
            if result.returncode == 0:
                return True
            else:
                return False
    except Exception as e:
        print(f"SetPartitionPriorityTier(): An exception occurred while attempting to modify the {partition_name} partition.")
        print(e)
        return False

def GetOutgoingInstitution():
    # Get the name of the institution that is losing priority this week
    index = GetWeekNum() - 1
    return rotateOrder[index]

if __name__ == "__main__":
    print(f"=== Partition Priority Rotation Script Beginning: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')} ===")
    dryRun = False
    if len(sys.argv) > 1 and sys.argv[1] == "-d":
        print("The partition priority rotation script is executing in DRY RUN mode!")
        print("No changes will be made to priority.")
        dryRun = True
    print(f"The current date is {datetime.datetime.today().strftime('%Y-%m-%d')}")
    print(f"The current week number is {GetWeekNum()}.")
    print(f"The high-priority partition is being changed from {GetOutgoingInstitution()} to {GetThisWeeksInstitution()}.")


    #Priority changes are done in this order intentionally to minimize potential scheduler trash
    #Promote the new institution to highPriorityValue
    if SetPartitionPriorityTier(GetThisWeeksInstitution(), highPriorityValue, dryRun) == True:
        print(f"Priority of partition {GetThisWeeksInstitution()} has been set to {highPriorityValue}.")
        #Demote the outgoing institution to normalPriorityValue
        if SetPartitionPriorityTier(GetOutgoingInstitution(), normalPriorityValue, dryRun) == True:
            print(f"Priority of partition {GetOutgoingInstitution()} has been set to {normalPriorityValue}.")
        else:
            print(f"There was some error attempting to change the priority of partition {GetOutgoingInstitution()} to {normalPriorityValue}.")
    else:
        print(f"There was some error attempting to change the priority of partition {GetThisWeeksInstitution()} to {highPriorityValue}.")
        print(f"Cowardly refusing to change the priority of outgoing institution {GetOutgoingInstitution()} as well.")
    
    print("=== Run Complete ===\n")
